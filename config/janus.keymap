#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE  &kp SQT   &kp COMMA  &kp DOT  &kp P       &kp Y                        &kp F      &kp G     &kp C     &kp R     &kp L     &kp FSLH
&kp TAB     &kp A     &kp O      &kp E    &kp U       &kp I                        &kp D      &kp H     &kp T     &kp N     &kp S     &kp EQUAL
&kp LSHFT   &kp SEMI  &kp Q      &kp J    &kp K       &kp X                        &kp B      &kp M     &kp W     &kp V     &kp Z     &kp MINUS
&kp LCTRL   &kp LGUI  &kp LALT   &mo 2    &kp LSHIFT  &kp SPACE  &mo 1  &kp ENTER  &kp SPACE  &kp BSPC  &kp LBKT  &kp RBKT  &kp BSLH  &kp DEL
            >;
        };

        nums_bt {
            bindings = <
&kp GRAVE   &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                          &kp N6     &kp N7    &kp N8  &kp N9   &kp N0   &kp DEL
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &none      &none     &none   &none    &none    &none
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                          &kp F7     &kp F8    &kp F9  &kp F10  &kp F11  &kp F12
&none       &none         &kp LALT      &none         &kp LSHIFT    &kp SPACE     &to 0  &kp RSHFT  &kp SPACE  &kp BSPC  &none   &none    &none    &none
            >;
        };

        num_pad {
            bindings = <
&none  &none  &none  &none  &none  &none                &kp BSPC  &none  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS
&none  &none  &none  &none  &none  &none                &kp DEL   &none  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS
&none  &none  &none  &none  &none  &none                &none     &none  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp DOT
&none  &none  &none  &to 0  &none  &none  &none  &none  &none     &none  &kp KP_NUMBER_0  &kp FSLH         &kp STAR         &kp KP_ENTER
            >;
        };
    };
};
